plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'com.gradleup.shadow' version '8.3.0'
    id 'maven-publish'
}

base {
    archivesName = project.archives_base_name
    group = project.maven_group
    version = project.version
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
}

configurations {
    implementation.extendsFrom(shadow)
}

dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Fabric API
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    // Make a collection of all api modules we wish to use
    Set<String> apiModules = [
            "fabric-api-base",
            "fabric-lifecycle-events-v1",
            "fabric-networking-api-v1"
    ]

    // Add each module as a dependency
    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, project.fabric_version)))
    }

    // Reflections
    shadow "org.reflections:reflections:${project.reflections_version}"
}

processResources {
    def properties = [
        "version" : project.version,
        "minecraft_version" : project.minecraft_version
    ]

    inputs.properties(properties)
    filesMatching("fabric.mod.json") {
        expand(properties)
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

loom {
    accessWidenerPath = file("src/main/resources/cheatmod.accesswidener")
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]

    from("LICENSE") {
        rename { "${it}_${project.base.archivesBaseName}" }
    }

    dependencies {
        exclude {
            it.moduleGroup == "org.slf4j"
        }
    }
}

remapJar {
    dependsOn shadowJar
    inputFile.set(shadowJar.archiveFile)
}


// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}